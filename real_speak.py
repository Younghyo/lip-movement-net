import json
import math
import subprocess

import cv2
import dlib
import numpy as np
from sklearn.preprocessing import MinMaxScaler
from keras.models import load_model

import cv2
import numpy as np
import os
import insightface
from insightface.app import FaceAnalysis
from insightface.data import get_image as ins_get_image

finding_method = 1

start = None
end = None
# start = 1417
# start = 1384
# prefix = "/home/ubuntu/tmp/sd-agp-eval/speak2/"

# start = 4916
# prefix = "/home/ubuntu/tmp/sd-agp-eval/speak3/"

# start = 4768
# prefix = "/home/ubuntu/Downloads/faces.1109613.8/"

# end = 4903
# end = 4653
end = 6894
if start is None and end is not None:
    start = end - 25 + 1
prefix = "/home/ubuntu/Downloads/faces.1109613.8/"

seq2 = [[[23, 56], [23, 67], [26, 79], [29, 90], [34, 101], [40, 110], [49, 115], [60, 116], [71, 117], [82, 116],
         [89, 109], [95, 100], [101, 92], [102, 81], [103, 70], [103, 59], [102, 46], [33, 43], [38, 38], [46, 37],
         [52, 38], [58, 41], [70, 37], [76, 34], [82, 31], [89, 31], [94, 33], [66, 46], [67, 53], [68, 60], [69, 67],
         [60, 76], [65, 77], [69, 77], [74, 75], [78, 74], [40, 52], [45, 49], [50, 48], [55, 51], [50, 52], [45, 53],
         [76, 48], [80, 44], [85, 43], [90, 46], [86, 48], [81, 49], [53, 94], [59, 87], [65, 84], [70, 85], [74, 83],
         [82, 86], [87, 92], [82, 98], [76, 102], [71, 103], [65, 104], [59, 100], [55, 94], [66, 88], [71, 89],
         [75, 88], [85, 92], [76, 96], [71, 97], [66, 96]],
        [[23, 56], [23, 67], [26, 79], [29, 91], [33, 101], [39, 110], [49, 116], [59, 116], [70, 117], [81, 115],
         [88, 109], [95, 101], [101, 92], [102, 82], [103, 70], [103, 59], [102, 47], [33, 44], [38, 39], [45, 38],
         [51, 39], [57, 41], [71, 37], [76, 34], [82, 32], [89, 31], [93, 33], [65, 46], [66, 53], [67, 61], [68, 68],
         [59, 77], [64, 77], [69, 78], [73, 76], [77, 75], [39, 52], [44, 49], [49, 49], [54, 51], [49, 52], [44, 53],
         [76, 48], [81, 44], [85, 44], [90, 46], [86, 47], [81, 48], [53, 95], [58, 88], [64, 84], [69, 85], [73, 84],
         [81, 86], [86, 92], [82, 98], [76, 103], [70, 105], [65, 105], [58, 101], [54, 95], [65, 89], [70, 89],
         [74, 89], [84, 92], [75, 97], [70, 97], [65, 97]],
        [[24, 56], [24, 67], [27, 78], [30, 90], [34, 100], [41, 109], [50, 114], [60, 116], [71, 116], [81, 114],
         [88, 107], [94, 98], [97, 88], [102, 79], [102, 68], [102, 57], [101, 45], [33, 43], [38, 38], [45, 37],
         [52, 38], [58, 40], [71, 37], [76, 34], [82, 32], [87, 31], [91, 33], [66, 46], [67, 53], [67, 60], [69, 67],
         [59, 75], [64, 75], [69, 76], [73, 75], [77, 73], [40, 52], [45, 49], [49, 49], [54, 50], [50, 52], [45, 52],
         [75, 47], [79, 43], [84, 43], [89, 46], [85, 47], [80, 48], [54, 93], [59, 87], [65, 83], [70, 84], [74, 82],
         [80, 84], [85, 90], [81, 97], [75, 102], [70, 104], [65, 104], [58, 100], [56, 93], [66, 87], [70, 87],
         [74, 87], [83, 90], [75, 96], [70, 97], [66, 96]],
        [[24, 56], [25, 67], [27, 79], [30, 90], [35, 101], [41, 110], [51, 115], [61, 116], [72, 116], [83, 115],
         [89, 108], [95, 99], [101, 90], [102, 79], [102, 68], [102, 57], [102, 45], [32, 43], [37, 38], [44, 37],
         [51, 38], [58, 40], [71, 36], [77, 33], [82, 31], [88, 30], [92, 32], [66, 45], [67, 52], [68, 59], [69, 65],
         [59, 74], [64, 75], [69, 75], [74, 74], [77, 72], [40, 51], [44, 48], [50, 47], [55, 50], [50, 51], [45, 52],
         [75, 46], [80, 43], [85, 42], [89, 45], [85, 46], [80, 47], [53, 93], [58, 87], [65, 82], [70, 83], [74, 82],
         [81, 84], [86, 89], [82, 96], [76, 101], [71, 102], [66, 103], [58, 100], [55, 93], [65, 87], [70, 87],
         [75, 86], [84, 89], [76, 95], [71, 96], [66, 95]],
        [[25, 56], [25, 66], [28, 78], [31, 89], [35, 99], [41, 109], [51, 115], [61, 117], [72, 117], [83, 116],
         [90, 108], [95, 98], [100, 90], [102, 79], [102, 68], [102, 57], [101, 45], [33, 43], [38, 38], [44, 36],
         [51, 37], [57, 39], [71, 36], [76, 33], [82, 31], [87, 31], [92, 33], [66, 45], [66, 52], [67, 59], [68, 65],
         [59, 74], [63, 75], [68, 75], [73, 73], [77, 72], [40, 51], [45, 47], [50, 47], [55, 49], [50, 50], [45, 51],
         [75, 47], [79, 43], [84, 42], [89, 45], [85, 46], [80, 47], [52, 92], [57, 86], [63, 82], [68, 83], [73, 81],
         [80, 83], [85, 89], [81, 96], [75, 101], [70, 101], [65, 101], [57, 99], [54, 92], [64, 86], [69, 86],
         [74, 86], [83, 89], [75, 95], [70, 95], [65, 95]],
        [[25, 56], [25, 67], [28, 78], [31, 90], [35, 100], [41, 109], [50, 115], [61, 117], [72, 117], [83, 116],
         [91, 108], [97, 100], [102, 90], [104, 79], [104, 68], [103, 56], [102, 44], [34, 42], [39, 38], [45, 36],
         [51, 37], [57, 39], [71, 36], [76, 33], [82, 30], [87, 30], [92, 32], [65, 44], [66, 51], [67, 58], [68, 65],
         [59, 74], [64, 74], [69, 75], [73, 73], [77, 72], [40, 51], [45, 47], [50, 47], [54, 49], [50, 50], [45, 51],
         [75, 46], [79, 43], [84, 42], [89, 44], [84, 46], [80, 46], [52, 93], [57, 86], [64, 82], [69, 82], [74, 81],
         [81, 83], [85, 89], [81, 95], [76, 99], [71, 100], [66, 100], [59, 98], [54, 92], [65, 86], [70, 86], [74, 85],
         [83, 89], [75, 93], [70, 93], [65, 94]],
        [[24, 56], [25, 67], [28, 78], [32, 89], [36, 100], [42, 108], [51, 115], [61, 116], [73, 117], [84, 116],
         [92, 108], [98, 100], [103, 90], [104, 79], [104, 68], [104, 56], [103, 44], [33, 42], [37, 37], [44, 35],
         [51, 36], [57, 39], [71, 35], [77, 32], [83, 30], [89, 29], [94, 33], [65, 44], [66, 51], [67, 58], [68, 65],
         [60, 74], [64, 74], [69, 75], [73, 73], [77, 72], [40, 50], [44, 47], [49, 47], [54, 48], [50, 50], [45, 51],
         [76, 45], [80, 42], [85, 42], [89, 44], [85, 45], [81, 46], [53, 93], [58, 87], [64, 82], [69, 82], [74, 81],
         [81, 83], [86, 89], [82, 94], [76, 99], [71, 100], [66, 100], [59, 98], [55, 92], [65, 86], [70, 86], [74, 85],
         [84, 89], [75, 92], [71, 93], [66, 93]],
        [[26, 60], [27, 69], [30, 79], [33, 89], [36, 98], [42, 106], [50, 111], [59, 115], [69, 115], [79, 114],
         [86, 107], [92, 99], [95, 90], [97, 80], [97, 70], [97, 60], [96, 50], [35, 46], [39, 42], [44, 41], [50, 42],
         [55, 43], [69, 41], [73, 38], [78, 36], [83, 35], [87, 38], [62, 49], [63, 55], [64, 61], [64, 67], [57, 75],
         [61, 75], [65, 76], [69, 74], [73, 73], [40, 55], [44, 52], [49, 51], [53, 53], [49, 54], [45, 55], [71, 50],
         [75, 47], [80, 46], [84, 48], [80, 50], [76, 50], [51, 91], [55, 85], [61, 81], [65, 82], [69, 81], [76, 83],
         [80, 87], [77, 93], [72, 97], [67, 98], [62, 98], [56, 96], [53, 91], [61, 85], [66, 85], [70, 85], [78, 88],
         [71, 91], [67, 92], [62, 92]],
        [[26, 60], [27, 70], [29, 79], [32, 89], [36, 98], [41, 106], [50, 111], [59, 115], [69, 115], [78, 113],
         [85, 106], [91, 98], [94, 89], [95, 79], [96, 69], [96, 60], [95, 50], [34, 46], [38, 43], [44, 41], [49, 42],
         [54, 44], [67, 41], [71, 38], [76, 36], [81, 36], [86, 38], [62, 49], [63, 55], [64, 61], [64, 67], [56, 75],
         [60, 75], [65, 75], [69, 74], [72, 73], [40, 54], [44, 52], [48, 51], [53, 53], [48, 54], [44, 55], [71, 50],
         [75, 47], [78, 46], [83, 48], [79, 50], [75, 50], [51, 91], [55, 85], [61, 81], [65, 82], [69, 80], [75, 82],
         [79, 88], [76, 93], [71, 97], [67, 98], [62, 98], [56, 95], [53, 91], [61, 85], [65, 85], [69, 84], [77, 88],
         [71, 91], [66, 92], [62, 92]],
        [[26, 59], [27, 69], [30, 79], [33, 89], [36, 98], [42, 106], [50, 111], [59, 115], [69, 116], [79, 114],
         [86, 107], [92, 99], [96, 90], [97, 80], [97, 70], [97, 59], [96, 49], [34, 46], [38, 42], [44, 41], [49, 42],
         [54, 43], [68, 41], [73, 38], [78, 36], [83, 36], [87, 38], [62, 49], [63, 55], [64, 61], [64, 67], [56, 74],
         [60, 75], [65, 76], [69, 74], [73, 73], [40, 54], [44, 51], [48, 51], [53, 52], [49, 54], [44, 54], [71, 50],
         [75, 47], [80, 47], [84, 49], [80, 50], [76, 50], [52, 91], [55, 85], [60, 81], [65, 82], [69, 81], [76, 82],
         [80, 88], [77, 94], [72, 98], [67, 99], [63, 99], [57, 96], [54, 91], [61, 85], [65, 85], [70, 85], [79, 88],
         [71, 92], [67, 92], [62, 92]],
        [[26, 61], [28, 71], [30, 81], [33, 90], [37, 100], [42, 107], [51, 113], [60, 116], [70, 116], [80, 115],
         [87, 107], [93, 100], [96, 91], [97, 81], [98, 70], [97, 60], [96, 51], [35, 47], [39, 43], [45, 42], [50, 43],
         [56, 45], [68, 42], [72, 39], [77, 36], [83, 36], [87, 39], [62, 49], [63, 56], [64, 62], [65, 69], [57, 76],
         [61, 76], [66, 77], [70, 75], [73, 74], [40, 55], [44, 52], [48, 52], [53, 53], [49, 54], [45, 55], [71, 50],
         [75, 47], [79, 47], [84, 49], [79, 50], [75, 51], [52, 92], [55, 86], [61, 82], [66, 83], [70, 81], [76, 83],
         [81, 88], [78, 94], [73, 98], [68, 99], [63, 99], [57, 96], [54, 92], [62, 86], [66, 86], [70, 85], [79, 88],
         [72, 93], [67, 93], [63, 93]],
        [[28, 60], [29, 69], [32, 79], [34, 89], [38, 99], [43, 106], [52, 113], [61, 116], [71, 116], [81, 115],
         [89, 107], [94, 99], [98, 90], [99, 81], [100, 70], [100, 60], [98, 50], [37, 47], [41, 44], [46, 43],
         [51, 44], [56, 46], [70, 43], [74, 40], [79, 37], [84, 37], [89, 39], [64, 50], [64, 57], [65, 64], [66, 70],
         [58, 77], [62, 78], [67, 78], [71, 77], [74, 75], [42, 56], [46, 53], [50, 52], [55, 53], [51, 55], [47, 56],
         [73, 51], [77, 48], [81, 48], [86, 50], [81, 51], [77, 51], [53, 93], [57, 87], [62, 83], [67, 84], [71, 82],
         [78, 84], [82, 89], [79, 95], [74, 99], [69, 100], [65, 100], [58, 98], [55, 93], [63, 87], [67, 87], [71, 86],
         [80, 89], [73, 94], [69, 94], [64, 94]],
        [[27, 61], [29, 71], [31, 80], [34, 90], [38, 100], [43, 108], [52, 114], [61, 116], [72, 117], [82, 115],
         [89, 108], [95, 100], [99, 91], [101, 81], [102, 71], [102, 61], [100, 50], [36, 48], [41, 43], [47, 43],
         [52, 44], [57, 46], [70, 42], [74, 40], [79, 37], [84, 37], [89, 39], [64, 51], [65, 58], [65, 64], [66, 70],
         [58, 78], [63, 78], [67, 79], [71, 77], [75, 76], [41, 56], [46, 54], [50, 53], [54, 54], [50, 56], [46, 57],
         [73, 52], [77, 49], [81, 48], [86, 50], [82, 52], [77, 52], [54, 94], [57, 88], [63, 84], [67, 85], [71, 83],
         [78, 85], [82, 91], [79, 96], [74, 100], [69, 101], [65, 101], [59, 98], [55, 94], [64, 88], [68, 88],
         [72, 87], [81, 91], [74, 94], [69, 95], [65, 95]],
        [[29, 60], [30, 70], [32, 80], [35, 90], [38, 100], [43, 108], [51, 114], [61, 116], [71, 117], [82, 116],
         [89, 108], [95, 100], [99, 91], [101, 81], [102, 71], [102, 60], [100, 50], [36, 48], [40, 44], [46, 43],
         [51, 44], [56, 46], [70, 42], [75, 39], [80, 37], [85, 37], [89, 39], [64, 50], [64, 57], [65, 64], [65, 70],
         [58, 78], [62, 78], [66, 78], [71, 77], [74, 76], [42, 56], [46, 53], [50, 53], [54, 54], [50, 56], [46, 57],
         [73, 52], [77, 48], [82, 48], [86, 50], [82, 52], [77, 53], [54, 94], [57, 88], [63, 84], [67, 85], [71, 83],
         [78, 85], [82, 91], [79, 96], [74, 100], [69, 101], [65, 101], [59, 98], [56, 94], [63, 89], [68, 89],
         [72, 88], [81, 91], [73, 94], [69, 95], [64, 95]],
        [[30, 61], [32, 70], [34, 80], [36, 90], [39, 100], [45, 109], [53, 115], [62, 117], [72, 117], [83, 116],
         [90, 108], [96, 100], [100, 91], [102, 82], [103, 71], [103, 61], [101, 50], [36, 50], [41, 46], [46, 45],
         [52, 45], [57, 47], [71, 43], [75, 40], [80, 38], [85, 37], [90, 39], [64, 51], [65, 58], [65, 65], [66, 72],
         [59, 79], [63, 80], [67, 80], [72, 78], [75, 77], [43, 57], [47, 55], [51, 54], [55, 55], [51, 57], [47, 58],
         [74, 52], [78, 49], [82, 48], [87, 51], [83, 52], [78, 52], [55, 95], [59, 89], [64, 85], [68, 86], [72, 84],
         [79, 86], [83, 92], [80, 97], [75, 101], [70, 102], [66, 102], [60, 100], [57, 95], [65, 89], [69, 89],
         [73, 89], [81, 92], [74, 95], [70, 96], [66, 96]],
        [[30, 61], [32, 70], [34, 80], [36, 90], [39, 99], [45, 108], [53, 114], [62, 116], [73, 117], [83, 116],
         [91, 108], [97, 100], [100, 91], [103, 81], [103, 71], [102, 61], [101, 50], [36, 48], [41, 44], [46, 43],
         [51, 44], [56, 45], [71, 42], [75, 39], [80, 37], [85, 37], [90, 39], [64, 50], [65, 57], [66, 63], [67, 70],
         [59, 77], [64, 78], [68, 78], [72, 77], [75, 76], [43, 57], [47, 53], [51, 53], [55, 54], [51, 56], [47, 57],
         [73, 52], [78, 49], [82, 48], [87, 50], [83, 52], [78, 53], [56, 93], [59, 88], [64, 84], [69, 85], [73, 83],
         [79, 85], [84, 91], [80, 96], [75, 100], [71, 101], [66, 101], [60, 98], [57, 93], [65, 88], [69, 88],
         [73, 88], [82, 91], [74, 94], [70, 95], [66, 95]],
        [[23, 57], [26, 68], [29, 79], [32, 91], [37, 101], [43, 110], [53, 116], [63, 117], [75, 117], [86, 116],
         [95, 108], [101, 99], [104, 90], [105, 78], [105, 66], [105, 54], [104, 42], [32, 43], [36, 39], [43, 37],
         [49, 37], [55, 39], [70, 35], [76, 31], [82, 28], [88, 27], [94, 31], [64, 44], [65, 52], [66, 59], [67, 66],
         [60, 76], [64, 77], [69, 77], [74, 75], [77, 73], [39, 52], [44, 48], [48, 48], [53, 49], [49, 51], [44, 52],
         [75, 45], [80, 40], [85, 40], [90, 42], [85, 44], [80, 45], [55, 94], [59, 88], [65, 84], [70, 84], [74, 82],
         [81, 84], [86, 90], [83, 96], [77, 100], [72, 101], [67, 102], [61, 100], [56, 94], [66, 89], [71, 88],
         [75, 87], [85, 90], [76, 94], [71, 94], [67, 95]],
        [[30, 61], [31, 70], [33, 80], [36, 90], [39, 100], [45, 108], [53, 114], [62, 116], [73, 117], [83, 115],
         [90, 108], [96, 100], [100, 90], [102, 80], [102, 69], [102, 59], [100, 49], [36, 49], [40, 45], [45, 44],
         [50, 45], [55, 47], [68, 43], [73, 39], [78, 37], [83, 36], [88, 39], [62, 51], [64, 58], [65, 64], [66, 70],
         [59, 78], [63, 79], [67, 79], [71, 77], [75, 76], [42, 57], [46, 54], [49, 54], [54, 55], [50, 57], [46, 57],
         [72, 52], [76, 48], [81, 47], [85, 49], [81, 50], [77, 51], [55, 93], [58, 88], [63, 84], [68, 85], [71, 83],
         [78, 85], [83, 90], [79, 96], [74, 100], [70, 101], [65, 101], [59, 98], [57, 93], [64, 89], [68, 88],
         [72, 88], [81, 90], [74, 94], [69, 95], [65, 95]],
        [[27, 61], [29, 71], [32, 80], [35, 91], [39, 100], [45, 108], [53, 114], [63, 116], [73, 116], [84, 114],
         [91, 107], [97, 99], [100, 89], [102, 78], [103, 68], [101, 57], [99, 46], [34, 47], [38, 43], [43, 42],
         [49, 43], [53, 44], [66, 40], [71, 37], [76, 34], [82, 34], [87, 35], [61, 49], [63, 55], [64, 62], [65, 68],
         [57, 76], [61, 76], [66, 76], [71, 75], [74, 73], [40, 56], [44, 53], [48, 52], [53, 53], [48, 55], [44, 56],
         [71, 49], [75, 45], [80, 44], [84, 46], [80, 48], [76, 49], [54, 93], [58, 87], [63, 83], [67, 83], [71, 81],
         [78, 83], [83, 89], [79, 94], [74, 98], [70, 99], [65, 99], [59, 97], [56, 93], [64, 87], [68, 86], [72, 85],
         [81, 89], [73, 92], [69, 93], [65, 93]],
        [[28, 63], [30, 72], [32, 82], [35, 92], [39, 101], [45, 108], [53, 114], [62, 116], [72, 116], [82, 114],
         [89, 107], [94, 99], [97, 90], [99, 80], [99, 69], [98, 59], [96, 49], [34, 49], [39, 45], [44, 44], [49, 45],
         [54, 46], [67, 42], [71, 39], [76, 36], [82, 35], [86, 38], [62, 50], [63, 57], [63, 63], [64, 70], [57, 77],
         [61, 78], [66, 78], [70, 76], [73, 74], [40, 57], [44, 55], [48, 53], [53, 54], [49, 56], [45, 57], [71, 51],
         [75, 47], [79, 46], [84, 49], [79, 50], [75, 50], [54, 94], [57, 88], [62, 83], [66, 84], [70, 82], [77, 84],
         [81, 89], [78, 94], [73, 98], [69, 99], [64, 99], [59, 98], [56, 94], [62, 87], [67, 87], [71, 86], [80, 89],
         [72, 92], [68, 93], [64, 93]],
        [[27, 62], [29, 71], [33, 81], [35, 90], [39, 100], [45, 107], [53, 113], [62, 116], [72, 116], [82, 113],
         [89, 106], [94, 98], [97, 89], [98, 79], [98, 68], [97, 58], [96, 48], [35, 48], [38, 45], [43, 43], [49, 44],
         [53, 45], [66, 41], [70, 38], [75, 35], [81, 35], [86, 37], [61, 49], [62, 56], [63, 63], [64, 69], [57, 77],
         [61, 77], [66, 77], [70, 75], [73, 73], [40, 56], [44, 53], [48, 53], [52, 54], [48, 56], [44, 56], [70, 50],
         [74, 46], [78, 45], [83, 47], [79, 48], [75, 49], [53, 92], [57, 87], [62, 82], [66, 83], [70, 81], [77, 83],
         [81, 88], [78, 93], [73, 96], [69, 98], [64, 98], [58, 96], [55, 92], [63, 86], [67, 86], [71, 85], [79, 88],
         [72, 91], [68, 92], [64, 92]],
        [[27, 62], [29, 71], [32, 81], [35, 91], [39, 100], [45, 108], [53, 113], [62, 116], [73, 116], [82, 114],
         [89, 106], [95, 98], [97, 89], [98, 79], [98, 69], [98, 59], [96, 49], [34, 49], [38, 44], [44, 43], [49, 45],
         [54, 46], [67, 42], [71, 38], [76, 36], [81, 35], [85, 37], [61, 49], [62, 56], [63, 63], [64, 69], [57, 77],
         [61, 77], [66, 77], [70, 76], [73, 74], [40, 57], [44, 54], [48, 53], [52, 53], [48, 55], [44, 56], [71, 50],
         [74, 47], [78, 46], [83, 48], [79, 49], [75, 50], [54, 94], [57, 87], [62, 83], [66, 83], [70, 82], [77, 83],
         [81, 89], [78, 94], [73, 97], [69, 98], [64, 99], [59, 97], [56, 93], [63, 87], [67, 87], [71, 86], [79, 89],
         [72, 92], [68, 93], [64, 93]],
        [[28, 64], [30, 73], [33, 82], [36, 92], [40, 101], [47, 109], [54, 114], [63, 116], [73, 116], [82, 114],
         [89, 106], [94, 98], [97, 90], [98, 80], [98, 70], [97, 59], [96, 50], [36, 50], [40, 46], [45, 45], [50, 46],
         [54, 47], [67, 42], [71, 39], [76, 37], [81, 37], [86, 38], [62, 50], [63, 57], [64, 63], [64, 70], [57, 78],
         [61, 78], [66, 78], [70, 76], [73, 74], [42, 58], [45, 55], [49, 54], [53, 55], [50, 57], [46, 58], [71, 51],
         [75, 47], [79, 46], [83, 48], [79, 50], [75, 50], [54, 94], [57, 88], [62, 84], [66, 84], [70, 82], [77, 83],
         [81, 89], [78, 94], [74, 97], [69, 98], [65, 99], [59, 97], [56, 93], [63, 87], [67, 87], [71, 86], [80, 89],
         [73, 92], [68, 93], [64, 93]],
        [[25, 63], [27, 72], [30, 82], [33, 91], [37, 101], [44, 109], [52, 114], [61, 116], [71, 116], [81, 114],
         [88, 107], [93, 98], [96, 90], [97, 80], [97, 69], [96, 59], [95, 49], [33, 49], [37, 45], [42, 43], [47, 44],
         [52, 45], [64, 41], [68, 38], [74, 36], [79, 35], [84, 37], [60, 49], [61, 56], [61, 62], [62, 69], [55, 77],
         [59, 77], [64, 77], [68, 75], [72, 73], [39, 56], [42, 53], [46, 53], [51, 54], [47, 56], [43, 56], [69, 50],
         [73, 46], [77, 45], [81, 47], [77, 49], [73, 50], [53, 94], [56, 87], [61, 83], [65, 83], [69, 81], [76, 83],
         [80, 88], [77, 93], [73, 97], [68, 98], [64, 98], [58, 97], [55, 93], [62, 87], [66, 86], [70, 85], [78, 88],
         [72, 92], [67, 92], [63, 92]],
        [[26, 64], [29, 73], [32, 82], [35, 92], [39, 101], [45, 109], [53, 114], [62, 116], [72, 116], [81, 114],
         [88, 107], [93, 99], [96, 90], [97, 80], [97, 69], [97, 59], [96, 50], [34, 50], [38, 46], [43, 45], [48, 45],
         [53, 46], [65, 42], [69, 39], [74, 36], [80, 36], [85, 38], [60, 50], [62, 57], [62, 64], [63, 70], [56, 78],
         [60, 78], [65, 78], [69, 76], [72, 74], [40, 57], [44, 54], [48, 53], [52, 54], [49, 56], [45, 57], [70, 51],
         [74, 47], [78, 46], [82, 48], [78, 49], [74, 50], [54, 94], [56, 88], [61, 83], [66, 84], [70, 82], [76, 83],
         [81, 88], [77, 93], [73, 97], [68, 98], [64, 98], [58, 97], [55, 94], [62, 87], [66, 87], [70, 86], [79, 88],
         [72, 92], [67, 92], [63, 92]]]

shape_predictor = dlib.shape_predictor("models/shape_predictor_68_face_landmarks.dat")
app = FaceAnalysis(allowed_modules=['detection', 'landmark_2d_106'])
app.prepare(ctx_id=0, det_size=(320, 320))


def find_landmarks_fast(img):
    faces = app.get(img)
    assert len(faces) == 1
    lmk = faces[0].landmark_2d_106
    lmk = np.round(lmk).astype(np.int)
    for i in range(lmk.shape[0]):
        p = tuple(lmk[i])
        # cv2.circle(img, p, 1, (0, 0, 255), -1)

    return lmk


def dist(p1, p2):
    p1_x = p1[0]
    p2_x = p2[0]
    p1_y = p1[1]
    p2_y = p2[1]
    dist = math.sqrt((p2_x - p1_x) ** 2 + (p2_y - p1_y) ** 2)
    return dist


model = load_model("models/1_32_False_True_0.25_lip_motion_net_model.h5")
input_sequence = []

out = cv2.VideoWriter('output_video.mp4', cv2.VideoWriter_fourcc(*'mp4v'), 5, (300, 300))


def find_dlib():
    facial_points = []
    global x, y, part
    for j in range(68):
        x, y = shape.part(j).x, shape.part(j).y
        cv2.circle(frame, (x, y), 1, (0, 0, 255), -1)

        part = shape.part(j)
        facial_points.append(part.x)
        facial_points.append(part.y)
    return facial_points


def find_sdu(frame, filename_img):
    cmd = ". /home/ubuntu/work/sdu-face-alignment/venv2/bin/activate && " \
          f"python3 /home/ubuntu/work/sdu-face-alignment/test.py {filename_img}"
    stdout, stderr = subprocess.Popen(cmd,
                                      shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE,
                                      cwd="/home/ubuntu/work/sdu-face-alignment").communicate()

    out = str(stdout, "utf-8")
    landmarks = json.loads(out)
    landmarks = np.array(landmarks)
    landmarks = np.round(landmarks).astype(np.int)

    for j in range(68):
        x, y = landmarks[j][0], landmarks[j][1]
        cv2.circle(frame, (x, y), 1, (0, 0, 255), -1)

    return landmarks


for i, fid in enumerate(range(start, start + 25)):
    filename_img = prefix + f"{fid}.jpg"
    frame = cv2.imread(filename_img)

    shape = shape_predictor(frame, dlib.rectangle(0, 0, frame.shape[1], frame.shape[0]))
    facial_points = []
    if finding_method == 0:
        facial_points = find_dlib()
    elif finding_method == 1:
        facial_points = find_landmarks_fast(frame)
    elif finding_method == 2:
        facial_points = find_sdu(frame, filename_img)

    input_sequence.append(facial_points)

    canvas = np.zeros((300, 300, 3), dtype=np.uint8)
    for q in range(frame.shape[0]):
        for w in range(frame.shape[1]):
            for e in range(frame.shape[2]):
                canvas[q][w][e] = frame[q][w][e]

    for _ in range(1):
        out.write(canvas)
    cv2.imshow('window0', frame)
    # cv2.imshow('window0', shape2)
    cv2.waitKey(100)

out.release()

FRAME_SEQ_LEN = 25
seq = input_sequence[-1 * FRAME_SEQ_LEN:]
f = []
for coords in seq:
    if finding_method == 0:
        part_61 = (int(coords[2 * 61]), int(coords[2 * 61 + 1]))
        part_67 = (int(coords[2 * 67]), int(coords[2 * 67 + 1]))
        part_62 = (int(coords[2 * 62]), int(coords[2 * 62 + 1]))
        part_66 = (int(coords[2 * 66]), int(coords[2 * 66 + 1]))
        part_63 = (int(coords[2 * 63]), int(coords[2 * 63 + 1]))
        part_65 = (int(coords[2 * 65]), int(coords[2 * 65 + 1]))

        A = dist(part_61, part_67)
        B = dist(part_62, part_66)
        C = dist(part_63, part_65)
    elif finding_method == 1:
        pt_66 = (int(coords[66][0]), int(coords[66][1]))
        pt_54 = (int(coords[54][0]), int(coords[54][1]))

        pt_62 = (int(coords[62][0]), int(coords[62][1]))
        pt_60 = (int(coords[60][0]), int(coords[60][1]))

        pt_70 = (int(coords[70][0]), int(coords[70][1]))
        pt_57 = (int(coords[57][0]), int(coords[57][1]))

        A = dist(pt_66, pt_54)
        B = dist(pt_62, pt_60)
        C = dist(pt_70, pt_57)
    elif finding_method == 2:
        part_61 = tuple(coords[61])
        part_67 = tuple(coords[67])
        part_62 = tuple(coords[62])
        part_66 = tuple(coords[66])
        part_63 = tuple(coords[63])
        part_65 = tuple(coords[65])

        A = dist(part_61, part_67)
        B = dist(part_62, part_66)
        C = dist(part_63, part_65)

    avg_gap = (A + B + C) / 3.0

    f.append([avg_gap])

scaler = MinMaxScaler()
arr = scaler.fit_transform(f)

X_data = np.array([arr])

# y_pred is already categorized
# y_pred = model.predict_on_batch(X_data)
y_pred = model.predict_on_batch(X_data)

# print('y_pred=' + str(y_pred) + ' shape=' + str(y_pred.shape))

# convert y_pred from categorized continuous to single label
y_pred_max = y_pred[0].argmax()
print('y_pred=' + str(y_pred) + ' y_pred_max=' + str(y_pred_max))
